{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\fixed_voting_frontend\\\\src\\\\pages\\\\VoteParliamentary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoteParliamentary() {\n  _s();\n  const [constituency, setConstituency] = useState('');\n  const [availableConstituencies, setAvailableConstituencies] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [selectedCandidate, setSelectedCandidate] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Fetch all constituencies on mount\n  useEffect(() => {\n    const fetchConstituencies = async () => {\n      try {\n        const res = await api.get('/api/candidates?type=parliamentary');\n        const allCandidates = res.data.candidates || [];\n        const constituencies = [...new Set(allCandidates.map(c => {\n          var _c$constituency;\n          return (_c$constituency = c.constituency) === null || _c$constituency === void 0 ? void 0 : _c$constituency.toUpperCase();\n        }).filter(c => c))];\n        setAvailableConstituencies(constituencies.sort());\n      } catch (err) {\n        console.error('Failed to load constituencies:', err);\n        setMessage('❌ Failed to load constituencies.');\n      }\n    };\n    fetchConstituencies();\n  }, []);\n\n  // Fetch candidates when a constituency is selected\n  useEffect(() => {\n    if (constituency) {\n      const fetchCandidates = async () => {\n        try {\n          const res = await api.get(`/api/candidates?type=parliamentary&constituency=${constituency}`);\n          setCandidates(res.data.candidates || []);\n        } catch (err) {\n          console.error('Failed to load candidates:', err);\n          setMessage('❌ Failed to load candidates.');\n        }\n      };\n      fetchCandidates();\n    } else {\n      setCandidates([]);\n      setSelectedCandidate('');\n    }\n  }, [constituency]);\n  const handleVote = async () => {\n    if (!selectedCandidate) {\n      alert('Please select a candidate.');\n      return;\n    }\n    setLoading(true);\n    setMessage('');\n    try {\n      await api.post('/api/votes', {\n        candidateId: selectedCandidate,\n        electionType: 'parliamentary'\n        // ✅ Backend knows constituency from candidate info\n      });\n      setMessage('✅ Vote cast successfully!');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      setMessage('❌ ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Vote failed.'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Parliamentary Election\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: constituency,\n      onChange: e => setConstituency(e.target.value),\n      className: \"border p-2 rounded mb-6 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select your constituency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), availableConstituencies.map((c, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: c,\n        children: c\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), constituency && candidates.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-4\",\n      children: \"\\u26A0\\uFE0F No candidates found for this constituency.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: candidates.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `border p-4 rounded shadow ${selectedCandidate === c._id ? 'border-green-500' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3000${c.image}`,\n          alt: c.name,\n          className: \"w-full h-48 object-cover rounded mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"candidate\",\n            value: c._id,\n            checked: selectedCandidate === c._id,\n            onChange: () => setSelectedCandidate(c._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: [c.name, \" (\", c.party, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, c._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVote,\n      disabled: !selectedCandidate || loading,\n      className: \"bg-green-600 text-white px-4 py-2 rounded mt-6 disabled:opacity-50\",\n      children: loading ? 'Submitting Vote...' : 'Cast Vote'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(VoteParliamentary, \"3Jkvbgac3zjEsyrOokF/5oqrTxw=\");\n_c = VoteParliamentary;\nvar _c;\n$RefreshReg$(_c, \"VoteParliamentary\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","VoteParliamentary","_s","constituency","setConstituency","availableConstituencies","setAvailableConstituencies","candidates","setCandidates","selectedCandidate","setSelectedCandidate","message","setMessage","loading","setLoading","fetchConstituencies","res","get","allCandidates","data","constituencies","Set","map","c","_c$constituency","toUpperCase","filter","sort","err","console","error","fetchCandidates","handleVote","alert","post","candidateId","electionType","_err$response","_err$response$data","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","i","length","_id","src","image","alt","name","type","checked","party","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/fixed_voting_frontend/src/pages/VoteParliamentary.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api/api';\r\n\r\nexport default function VoteParliamentary() {\r\n  const [constituency, setConstituency] = useState('');\r\n  const [availableConstituencies, setAvailableConstituencies] = useState([]);\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [selectedCandidate, setSelectedCandidate] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch all constituencies on mount\r\n  useEffect(() => {\r\n    const fetchConstituencies = async () => {\r\n      try {\r\n        const res = await api.get('/api/candidates?type=parliamentary');\r\n        const allCandidates = res.data.candidates || [];\r\n        const constituencies = [...new Set(\r\n          allCandidates\r\n            .map(c => c.constituency?.toUpperCase())\r\n            .filter(c => c)\r\n        )];\r\n        setAvailableConstituencies(constituencies.sort());\r\n      } catch (err) {\r\n        console.error('Failed to load constituencies:', err);\r\n        setMessage('❌ Failed to load constituencies.');\r\n      }\r\n    };\r\n\r\n    fetchConstituencies();\r\n  }, []);\r\n\r\n  // Fetch candidates when a constituency is selected\r\n  useEffect(() => {\r\n    if (constituency) {\r\n      const fetchCandidates = async () => {\r\n        try {\r\n          const res = await api.get(\r\n            `/api/candidates?type=parliamentary&constituency=${constituency}`\r\n          );\r\n          setCandidates(res.data.candidates || []);\r\n        } catch (err) {\r\n          console.error('Failed to load candidates:', err);\r\n          setMessage('❌ Failed to load candidates.');\r\n        }\r\n      };\r\n      fetchCandidates();\r\n    } else {\r\n      setCandidates([]);\r\n      setSelectedCandidate('');\r\n    }\r\n  }, [constituency]);\r\n\r\n  const handleVote = async () => {\r\n    if (!selectedCandidate) {\r\n      alert('Please select a candidate.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage('');\r\n    try {\r\n      await api.post('/api/votes', {\r\n        candidateId: selectedCandidate,\r\n        electionType: 'parliamentary',\r\n        // ✅ Backend knows constituency from candidate info\r\n      });\r\n\r\n      setMessage('✅ Vote cast successfully!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('❌ ' + (err.response?.data?.message || 'Vote failed.'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Parliamentary Election</h2>\r\n\r\n      {/* Constituency Dropdown */}\r\n      <select\r\n        value={constituency}\r\n        onChange={(e) => setConstituency(e.target.value)}\r\n        className=\"border p-2 rounded mb-6 w-full\"\r\n      >\r\n        <option value=\"\">Select your constituency</option>\r\n        {availableConstituencies.map((c, i) => (\r\n          <option key={i} value={c}>{c}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {constituency && candidates.length === 0 && (\r\n        <p className=\"text-gray-600 mb-4\">\r\n          ⚠️ No candidates found for this constituency.\r\n        </p>\r\n      )}\r\n\r\n      {/* Candidate List */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {candidates.map((c) => (\r\n          <div\r\n            key={c._id}\r\n            className={`border p-4 rounded shadow ${\r\n              selectedCandidate === c._id ? 'border-green-500' : ''\r\n            }`}\r\n          >\r\n            <img\r\n              src={`http://localhost:3000${c.image}`}\r\n              alt={c.name}\r\n              className=\"w-full h-48 object-cover rounded mb-3\"\r\n            />\r\n            <label className=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"candidate\"\r\n                value={c._id}\r\n                checked={selectedCandidate === c._id}\r\n                onChange={() => setSelectedCandidate(c._id)}\r\n              />\r\n              <span className=\"font-medium\">\r\n                {c.name} ({c.party})\r\n              </span>\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Submit Button */}\r\n      <button\r\n        onClick={handleVote}\r\n        disabled={!selectedCandidate || loading}\r\n        className=\"bg-green-600 text-white px-4 py-2 rounded mt-6 disabled:opacity-50\"\r\n      >\r\n        {loading ? 'Submitting Vote...' : 'Cast Vote'}\r\n      </button>\r\n\r\n      {/* Message */}\r\n      {message && <p className=\"mt-4 text-lg\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
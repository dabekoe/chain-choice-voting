{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\fixed_voting_frontend\\\\src\\\\pages\\\\VotePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotePage() {\n  _s();\n  const [candidates, setCandidates] = useState([]);\n  const [selected, setSelected] = useState('');\n  const [hasVoted, setHasVoted] = useState(false);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const candRes = await api.get('/candidates');\n        setCandidates(Array.isArray(candRes.data) ? candRes.data : []);\n        const status = await api.get('/vote/status');\n        setHasVoted(status.data.hasVoted);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetch();\n  }, []);\n  const handleVote = async () => {\n    if (!selected) return;\n    if (!window.confirm('Are you sure?')) return;\n    try {\n      await api.post('/vote', {\n        candidateId: selected\n      });\n      alert('Vote cast');\n      setHasVoted(true);\n    } catch (err) {\n      alert('Vote failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-lg mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Cast Your Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), hasVoted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-600 font-semibold\",\n      children: \"You have already voted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selected,\n        onChange: e => setSelected(e.target.value),\n        className: \"border p-2 mb-4 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), candidates.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c._id,\n          children: [c.name, \" - \", c.party]\n        }, c._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVote,\n        disabled: !selected,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Submit Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(VotePage, \"F3pxyt3Ukv4vk18dlUtH56T/jlE=\");\n_c = VotePage;\nvar _c;\n$RefreshReg$(_c, \"VotePage\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","VotePage","_s","candidates","setCandidates","selected","setSelected","hasVoted","setHasVoted","fetch","candRes","get","Array","isArray","data","status","err","console","error","handleVote","window","confirm","post","candidateId","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","c","_id","name","party","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/fixed_voting_frontend/src/pages/VotePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../api/api';\n\nexport default function VotePage() {\n  const [candidates, setCandidates] = useState([]);\n  const [selected, setSelected] = useState('');\n  const [hasVoted, setHasVoted] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const candRes = await api.get('/candidates');\n        setCandidates(Array.isArray(candRes.data) ? candRes.data : []);\n        const status = await api.get('/vote/status');\n        setHasVoted(status.data.hasVoted);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetch();\n  }, []);\n\n  const handleVote = async () => {\n    if (!selected) return;\n    if (!window.confirm('Are you sure?')) return;\n    try {\n      await api.post('/vote', { candidateId: selected });\n      alert('Vote cast');\n      setHasVoted(true);\n    } catch (err) {\n      alert('Vote failed');\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-lg mx-auto\">\n      <h2 className=\"text-xl font-bold mb-4\">Cast Your Vote</h2>\n      {hasVoted ? (\n        <p className=\"text-green-600 font-semibold\">You have already voted.</p>\n      ) : (\n        <div>\n          <select value={selected} onChange={(e) => setSelected(e.target.value)} className=\"border p-2 mb-4 w-full\">\n            <option value=\"\">Select candidate</option>\n            {candidates.map(c => (\n              <option key={c._id} value={c._id}>\n                {c.name} - {c.party}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleVote} disabled={!selected} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n            Submit Vote\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
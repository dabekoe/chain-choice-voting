{"ast":null,"code":"import React,{useEffect,useState}from'react';import api from'../api/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function VoteParliamentary(){const[constituency,setConstituency]=useState('');const[availableConstituencies,setAvailableConstituencies]=useState([]);const[candidates,setCandidates]=useState([]);const[selectedCandidate,setSelectedCandidate]=useState('');const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);// Fetch all constituencies on mount\nuseEffect(()=>{const fetchConstituencies=async()=>{try{const res=await api.get('/api/candidates?type=parliamentary');const allCandidates=res.data.candidates||[];const constituencies=[...new Set(allCandidates.map(c=>{var _c$constituency;return(_c$constituency=c.constituency)===null||_c$constituency===void 0?void 0:_c$constituency.toUpperCase();}).filter(c=>c))];setAvailableConstituencies(constituencies.sort());}catch(err){console.error('Failed to load constituencies:',err);setMessage('❌ Failed to load constituencies.');}};fetchConstituencies();},[]);// Fetch candidates when a constituency is selected\nuseEffect(()=>{if(constituency){const fetchCandidates=async()=>{try{const res=await api.get(`/api/candidates?type=parliamentary&constituency=${constituency}`);setCandidates(res.data.candidates||[]);}catch(err){console.error('Failed to load candidates:',err);setMessage('❌ Failed to load candidates.');}};fetchCandidates();}else{setCandidates([]);setSelectedCandidate('');}},[constituency]);const handleVote=async()=>{if(!selectedCandidate){alert('Please select a candidate.');return;}setLoading(true);setMessage('');try{await api.post('/api/votes',{candidateId:selectedCandidate,electionType:'parliamentary'});setMessage('✅ Vote cast successfully!');}catch(err){var _err$response,_err$response$data;console.error(err);setMessage('❌ '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Vote failed.'));}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-indigo-100 py-10 px-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-4xl bg-white rounded-2xl shadow-xl p-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-extrabold text-blue-900 mb-2\",children:\"Parliamentary Election\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm mb-4\",children:\"Select your constituency and preferred candidate\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:constituency,onChange:e=>setConstituency(e.target.value),className:\"border p-3 rounded-lg mb-8 w-full focus:ring-2 focus:ring-blue-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select your constituency\"}),availableConstituencies.map((c,i)=>/*#__PURE__*/_jsx(\"option\",{value:c,children:c},i))]}),constituency&&candidates.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4 text-center\",children:\"\\u26A0\\uFE0F No candidates found for this constituency.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",children:candidates.map(c=>/*#__PURE__*/_jsxs(\"div\",{className:`border-2 p-4 rounded-xl shadow-sm bg-gradient-to-br from-blue-50 to-indigo-50 flex flex-col items-center transition ${selectedCandidate===c._id?'border-blue-600 ring-2 ring-blue-300':'border-gray-200'}`,children:[c.image&&/*#__PURE__*/_jsx(\"img\",{src:`http://localhost:3000${c.image}`,alt:c.name,className:\"w-28 h-28 object-cover rounded-full mb-3 border-4 border-white shadow\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"candidate\",value:c._id,checked:selectedCandidate===c._id,onChange:()=>setSelectedCandidate(c._id),className:\"accent-blue-600 w-5 h-5\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-900\",children:c.name})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-700 mb-1\",children:c.party})]},c._id))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVote,disabled:!selectedCandidate||loading,className:\"w-full bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-indigo-700 hover:to-blue-700 text-white font-bold py-3 rounded-xl shadow mt-8 transition disabled:opacity-50\",children:loading?'Submitting Vote...':'Cast Vote'}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-6 text-center text-lg font-semibold text-blue-700\",children:message}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-10 text-center text-gray-400 text-xs\",children:[\"\\xA9 \",new Date().getFullYear(),\" National Online Voting System. All rights reserved.\"]})]})});}","map":{"version":3,"names":["React","useEffect","useState","api","jsx","_jsx","jsxs","_jsxs","VoteParliamentary","constituency","setConstituency","availableConstituencies","setAvailableConstituencies","candidates","setCandidates","selectedCandidate","setSelectedCandidate","message","setMessage","loading","setLoading","fetchConstituencies","res","get","allCandidates","data","constituencies","Set","map","c","_c$constituency","toUpperCase","filter","sort","err","console","error","fetchCandidates","handleVote","alert","post","candidateId","electionType","_err$response","_err$response$data","response","className","children","value","onChange","e","target","i","length","_id","image","src","alt","name","type","checked","party","onClick","disabled","Date","getFullYear"],"sources":["C:/Users/user/Desktop/Chain Choice/Chain Choice/voting frontend/src/pages/VoteParliamentary.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api/api';\r\n\r\nexport default function VoteParliamentary() {\r\n  const [constituency, setConstituency] = useState('');\r\n  const [availableConstituencies, setAvailableConstituencies] = useState([]);\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [selectedCandidate, setSelectedCandidate] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch all constituencies on mount\r\n  useEffect(() => {\r\n    const fetchConstituencies = async () => {\r\n      try {\r\n        const res = await api.get('/api/candidates?type=parliamentary');\r\n        const allCandidates = res.data.candidates || [];\r\n        const constituencies = [...new Set(\r\n          allCandidates\r\n            .map(c => c.constituency?.toUpperCase())\r\n            .filter(c => c)\r\n        )];\r\n        setAvailableConstituencies(constituencies.sort());\r\n      } catch (err) {\r\n        console.error('Failed to load constituencies:', err);\r\n        setMessage('❌ Failed to load constituencies.');\r\n      }\r\n    };\r\n\r\n    fetchConstituencies();\r\n  }, []);\r\n\r\n  // Fetch candidates when a constituency is selected\r\n  useEffect(() => {\r\n    if (constituency) {\r\n      const fetchCandidates = async () => {\r\n        try {\r\n          const res = await api.get(\r\n            `/api/candidates?type=parliamentary&constituency=${constituency}`\r\n          );\r\n          setCandidates(res.data.candidates || []);\r\n        } catch (err) {\r\n          console.error('Failed to load candidates:', err);\r\n          setMessage('❌ Failed to load candidates.');\r\n        }\r\n      };\r\n      fetchCandidates();\r\n    } else {\r\n      setCandidates([]);\r\n      setSelectedCandidate('');\r\n    }\r\n  }, [constituency]);\r\n\r\n  const handleVote = async () => {\r\n    if (!selectedCandidate) {\r\n      alert('Please select a candidate.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage('');\r\n    try {\r\n      await api.post('/api/votes', {\r\n        candidateId: selectedCandidate,\r\n        electionType: 'parliamentary',\r\n      });\r\n\r\n      setMessage('✅ Vote cast successfully!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('❌ ' + (err.response?.data?.message || 'Vote failed.'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-indigo-100 py-10 px-2\">\r\n      <div className=\"w-full max-w-4xl bg-white rounded-2xl shadow-xl p-8\">\r\n        <div className=\"flex flex-col items-center mb-8\">\r\n          <h2 className=\"text-3xl font-extrabold text-blue-900 mb-2\">Parliamentary Election</h2>\r\n          <p className=\"text-gray-500 text-sm mb-4\">Select your constituency and preferred candidate</p>\r\n        </div>\r\n\r\n        {/* Constituency Dropdown */}\r\n        <select\r\n          value={constituency}\r\n          onChange={(e) => setConstituency(e.target.value)}\r\n          className=\"border p-3 rounded-lg mb-8 w-full focus:ring-2 focus:ring-blue-400\"\r\n        >\r\n          <option value=\"\">Select your constituency</option>\r\n          {availableConstituencies.map((c, i) => (\r\n            <option key={i} value={c}>{c}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {constituency && candidates.length === 0 && (\r\n          <p className=\"text-gray-600 mb-4 text-center\">\r\n            ⚠️ No candidates found for this constituency.\r\n          </p>\r\n        )}\r\n\r\n        {/* Candidate List */}\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {candidates.map((c) => (\r\n            <div\r\n              key={c._id}\r\n              className={`border-2 p-4 rounded-xl shadow-sm bg-gradient-to-br from-blue-50 to-indigo-50 flex flex-col items-center transition ${\r\n                selectedCandidate === c._id\r\n                  ? 'border-blue-600 ring-2 ring-blue-300'\r\n                  : 'border-gray-200'\r\n              }`}\r\n            >\r\n              {c.image && (\r\n                <img\r\n                  src={`http://localhost:3000${c.image}`}\r\n                  alt={c.name}\r\n                  className=\"w-28 h-28 object-cover rounded-full mb-3 border-4 border-white shadow\"\r\n                />\r\n              )}\r\n              <label className=\"flex items-center space-x-2 mb-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"candidate\"\r\n                  value={c._id}\r\n                  checked={selectedCandidate === c._id}\r\n                  onChange={() => setSelectedCandidate(c._id)}\r\n                  className=\"accent-blue-600 w-5 h-5\"\r\n                />\r\n                <span className=\"font-semibold text-blue-900\">{c.name}</span>\r\n              </label>\r\n              <span className=\"text-sm text-gray-700 mb-1\">{c.party}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          onClick={handleVote}\r\n          disabled={!selectedCandidate || loading}\r\n          className=\"w-full bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-indigo-700 hover:to-blue-700 text-white font-bold py-3 rounded-xl shadow mt-8 transition disabled:opacity-50\"\r\n        >\r\n          {loading ? 'Submitting Vote...' : 'Cast Vote'}\r\n        </button>\r\n\r\n        {/* Message */}\r\n        {message && <p className=\"mt-6 text-center text-lg font-semibold text-blue-700\">{message}</p>}\r\n\r\n        <div className=\"mt-10 text-center text-gray-400 text-xs\">\r\n          &copy; {new Date().getFullYear()} National Online Voting System. All rights reserved.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}